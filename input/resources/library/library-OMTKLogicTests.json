{
  "resourceType": "Library",
  "id": "OMTKLogicTests",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  } ],
  "version": "3.0.0",
  "name": "OMTKLogicTests",
  "title": "Tests of the Opioid Management Terminology Knowledge Logic library",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "description": "This library tests the MME calculator provided by the OMTKLogic library",
  "content": [ {
    "contentType": "text/cql",
    "data": "",
    "url": "C:\\Users\\Bryn\\Documents\\Src\\SS\\Pilots\\Opioid\\opioid-mme-r4\\input\\cql\\OMTKLogicTests.cql"
  } ]
}